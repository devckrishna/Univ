// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Mentor {
  id           String          @id @default(uuid())
  name         String
  email        String          @unique
  description  String
  country      String
  university   String
  image        String
  gender       String
  rate         Int       
  rating       Float
  bookings     Booking[]
  feedbacks    Feedback[]
  availability MentorBooking[]
}

model Student {
  id          String     @id @default(uuid())
  name        String
  email       String     @unique
  description String
  country     String
  image       String
  gender      String
  bookings    Booking[]
  feedbacks   Feedback[]
}

model Booking {
  id         String  @id @default(uuid())
  date       String
  student    Student @relation(fields: [student_id], references: [id])
  student_id String
  mentor     Mentor  @relation(fields: [mentor_id], references: [id])
  mentor_id  String
  duration   Int
  start_time String
  end_time   String
  amount     Int
  mentorFeedbackFlag Boolean
  mentorFeedback String
  menteeFeedbackFlag Boolean
  menteeFeedbackRating Int
  menteeFeedback  String
}

model MentorBooking {
  id         String @id @default(uuid())
  date       String
  mentor     Mentor @relation(fields: [mentor_id], references: [id])
  mentor_id  String 
  duration   Int
  start_time String
  end_time   String
}

model Feedback {
  id         String  @id @default(uuid())
  type       String
  student    Student @relation(fields: [student_id], references: [id])
  student_id String
  mentor     Mentor  @relation(fields: [mentor_id], references: [id])
  mentor_id  String
  date        String
  rating      Float
  description String
  created_at  DateTime @default(now())
}

model University {
  id               String   @id @default(uuid())
  name             String
  email            String
  description      String
  images           String[]
  bachelor_courses String[]
  masters_courses  String[]
  address          String
  website          String
  posts            Post[]
}

model Post {
  id            String     @id @default(uuid())
  title         String
  images        String[]
  description   String
  created_at    DateTime   @default(now())
  university_name String
  university    University @relation(fields: [university_id], references: [id])
  university_id String
}
